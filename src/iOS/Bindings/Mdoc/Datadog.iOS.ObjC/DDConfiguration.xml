<Type Name="DDConfiguration" FullName="Datadog.iOS.ObjC.DDConfiguration">
  <TypeSignature Language="C#" Value="public class DDConfiguration : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DDConfiguration extends Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>objc</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("_TtC11DatadogObjc15DDConfiguration", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.Nullable(0)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.NullableContext(1)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Configuration of the Datadog SDK.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DDConfiguration (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">
        </param>
        <summary>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal DDConfiguration (ObjCRuntime.NativeHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(valuetype ObjCRuntime.NativeHandle handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="ObjCRuntime.NativeHandle" />
      </Parameters>
      <Docs>
        <param name="handle">
        </param>
        <summary>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DDConfiguration (string clientToken, string env);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string clientToken, string env) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithClientToken:env:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="clientToken" Type="System.String" />
        <Parameter Name="env" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientToken">Either the RUM client token (which supports RUM, Logging and APM) or regular client token, only for Logging and APM.</param>
        <param name="env">The environment name which will be sent to Datadog. This can be used to filter events on different environments (e.g. "staging" or "production").</param>
        <summary>Creates a Datadog SDK Configuration object.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundTasksEnabled">
      <MemberSignature Language="C#" Value="public virtual bool BackgroundTasksEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundTasksEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("backgroundTasksEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setBackgroundTasksEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Flag that determines if UIApplication methods <c>BeginBackgroundTask (ActionbackgroundTimeExpired)</c>(https://learn.microsoft.com/en-us/dotnet/api/uikit.uiapplication.beginbackgroundtask?view=xamarin-ios-sdk-12#uikit-uiapplication-beginbackgroundtask(system-action))
            and <c>EndBackgroundTask (nint taskId)</c>(https://learn.microsoft.com/en-us/dotnet/api/uikit.uiapplication.endbackgroundtask?view=xamarin-ios-sdk-12)
            are utilized to perform background uploads. It may extend the amount of time the app is
            operating in the background by 30 seconds.</para>
          <para>Tasks are normally stopped when there's nothing to upload or when encountering any upload blocker such us no Internet connection or low battery.</para>
        </summary>
        <value><c>false</c> by default.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchProcessingLevel">
      <MemberSignature Language="C#" Value="public virtual Datadog.iOS.ObjC.DDBatchProcessingLevel BatchProcessingLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Datadog.iOS.ObjC.DDBatchProcessingLevel BatchProcessingLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("batchProcessingLevel", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setBatchProcessingLevel:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Datadog.iOS.ObjC.DDBatchProcessingLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Batch processing level, defining the maximum number of batches processed sequentially without a delay within one reading/uploading cycle.</summary>
        <value>
        </value>
        <remarks>
          <see cref="Medium" /> by default.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchSize">
      <MemberSignature Language="C#" Value="public virtual Datadog.iOS.ObjC.DDBatchSize BatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Datadog.iOS.ObjC.DDBatchSize BatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("batchSize", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setBatchSize:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Datadog.iOS.ObjC.DDBatchSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The preferred size of batched data uploaded to Datadog servers. This value impacts the size and number of requests performed by the SDK. <c>Medium</c> by default.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bundle">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSBundle Bundle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSBundle Bundle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("bundle", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setBundle:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSBundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The bundle object that contains the current executable.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override ObjCRuntime.NativeHandle ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ObjCRuntime.NativeHandle ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ObjCRuntime.NativeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientToken">
      <MemberSignature Language="C#" Value="public virtual string ClientToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("clientToken")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setClientToken:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Either the RUM client token (which supports RUM, Logging and APM) or regular client token, only for Logging and APM.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Env">
      <MemberSignature Language="C#" Value="public virtual string Env { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Env" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("env")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setEnv:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The environment name which will be sent to Datadog. This can be used to filter events on different environments (e.g. “staging” or “production”).</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyConfiguration">
      <MemberSignature Language="C#" Value="public virtual Foundation.NSDictionary ProxyConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Foundation.NSDictionary ProxyConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.Nullable(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("proxyConfiguration", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.NullableContext(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setProxyConfiguration:", ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.CompilerServices.NullableContext(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Proxy configuration attributes. This can be used to a enable a custom proxy for uploading tracked data to Datadog's intake.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Service">
      <MemberSignature Language="C#" Value="public virtual string Service { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Service" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.Nullable(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("service")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.NullableContext(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setService:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.CompilerServices.NullableContext(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The service name associated with data sent to Datadog.</summary>
        <value>Default is the application bundle identifier.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEncryption">
      <MemberSignature Language="C#" Value="public virtual void SetEncryption (Datadog.iOS.ObjC.IDDDataEncryption encryption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEncryption(class Datadog.iOS.ObjC.IDDDataEncryption encryption) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setEncryption:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryption" Type="Datadog.iOS.ObjC.IDDDataEncryption" />
      </Parameters>
      <Docs>
        <param name="encryption">
        </param>
        <summary>Sets Data encryption to use for on-disk data persistency by providing an object complying with <c>DataEncryption</c> protocol.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetServerDateProvider">
      <MemberSignature Language="C#" Value="public virtual void SetServerDateProvider (Datadog.iOS.ObjC.IDDServerDateProvider serverDateProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetServerDateProvider(class Datadog.iOS.ObjC.IDDServerDateProvider serverDateProvider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("setServerDateProvider:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverDateProvider" Type="Datadog.iOS.ObjC.IDDServerDateProvider" />
      </Parameters>
      <Docs>
        <param name="serverDateProvider">
        </param>
        <summary>A custom NTP synchronization interface. 
        By default, the Datadog SDK synchronizes with dedicated NTP pools provided by the 
        https://www.ntppool.org/ . Using different pools or setting a no-op <c>ServerDateProvider</c> 
        implementation will result in desynchronization of the SDK instance and the Datadog servers. 
        This can lead to significant time shift in RUM sessions or distributed traces.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public virtual Datadog.iOS.ObjC.DDSite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Datadog.iOS.ObjC.DDSite Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("site", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setSite:", ObjCRuntime.ArgumentSemantic.Strong)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Datadog.iOS.ObjC.DDSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The Datadog server site where data is sent. Default value is <c>US1</c>.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadFrequency">
      <MemberSignature Language="C#" Value="public virtual Datadog.iOS.ObjC.DDUploadFrequency UploadFrequency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Datadog.iOS.ObjC.DDUploadFrequency UploadFrequency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("uploadFrequency", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setUploadFrequency:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Datadog.iOS.ObjC.DDUploadFrequency</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The preferred frequency of uploading data to Datadog servers. This value impacts the frequency of performing network requests by the SDK. <c>Average</c> by default.</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
