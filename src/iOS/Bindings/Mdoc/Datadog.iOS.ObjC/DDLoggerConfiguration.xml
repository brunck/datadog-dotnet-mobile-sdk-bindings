<Type Name="DDLoggerConfiguration" FullName="Datadog.iOS.ObjC.DDLoggerConfiguration">
  <TypeSignature Language="C#" Value="public class DDLoggerConfiguration : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DDLoggerConfiguration extends Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>objc</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("_TtC11DatadogObjc21DDLoggerConfiguration", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.Nullable(0)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.NullableContext(2)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Datadog logger.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DDLoggerConfiguration (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">
        </param>
        <summary>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal DDLoggerConfiguration (ObjCRuntime.NativeHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(valuetype ObjCRuntime.NativeHandle handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="ObjCRuntime.NativeHandle" />
      </Parameters>
      <Docs>
        <param name="handle">
        </param>
        <summary>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DDLoggerConfiguration (string service = null, string name = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string service, string name) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="service" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="service">
        </param>
        <param name="name">
        </param>
        <summary>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DDLoggerConfiguration (string service, string name, bool networkInfoEnabled, bool bundleWithRumEnabled, bool bundleWithTraceEnabled, float remoteSampleRate, Datadog.iOS.ObjC.DDLogLevel remoteLogThreshold, bool printLogsToConsole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string service, string name, bool networkInfoEnabled, bool bundleWithRumEnabled, bool bundleWithTraceEnabled, float32 remoteSampleRate, valuetype Datadog.iOS.ObjC.DDLogLevel remoteLogThreshold, bool printLogsToConsole) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("initWithService:name:networkInfoEnabled:bundleWithRumEnabled:bundleWithTraceEnabled:remoteSampleRate:remoteLogThreshold:printLogsToConsole:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.DesignatedInitializer</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="service" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="networkInfoEnabled" Type="System.Boolean" />
        <Parameter Name="bundleWithRumEnabled" Type="System.Boolean" />
        <Parameter Name="bundleWithTraceEnabled" Type="System.Boolean" />
        <Parameter Name="remoteSampleRate" Type="System.Single" />
        <Parameter Name="remoteLogThreshold" Type="Datadog.iOS.ObjC.DDLogLevel" />
        <Parameter Name="printLogsToConsole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="service">The service name (default value is set to the application bundle identifier).</param>
        <param name="name">The logger custom name (default value is set to the main bundle identifier).</param>
        <param name="networkInfoEnabled">Enriches logs with network connection info. <c>false</c> by default.</param>
        <param name="bundleWithRumEnabled">Enables the logs integration with RUM. <c>true</c> by default.</param>
        <param name="bundleWithTraceEnabled">Enables the logs integration with the active span API from Tracing. <c>true</c> by default.</param>
        <param name="remoteSampleRate">The sample rate for remote logging. <i>When set to <c>0</c>, no log entries will be sent to Datadog servers.</i></param>
        <param name="remoteLogThreshold">Set the minimum log level reported to Datadog servers. <c>Debug</c> by default.</param>
        <param name="printLogsToConsole">Format to use when printing logs to the console - either <c>Short</c> or <c>Json</c>.</param>
        <summary>Creates a Logger Configuration.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BundleWithRumEnabled">
      <MemberSignature Language="C#" Value="public virtual bool BundleWithRumEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BundleWithRumEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("bundleWithRumEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setBundleWithRumEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        Enables the logs integration with RUM. 
        If enabled all the logs will be enriched with the current RUM View information and 
        it will be possible to see all the logs sent during a specific View lifespan in the RUM Explorer. 
        <c>true</c> by default.
        </summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BundleWithTraceEnabled">
      <MemberSignature Language="C#" Value="public virtual bool BundleWithTraceEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BundleWithTraceEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("bundleWithTraceEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setBundleWithTraceEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        Enables the logs integration with active span API from Tracing. 
        If enabled all the logs will be bundled with the <c>DDTracer.Shared.activeSpan</c> trace and 
        it will be possible to see all the logs sent during that specific trace. 
        <c>true</c> by default.
        </summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override ObjCRuntime.NativeHandle ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ObjCRuntime.NativeHandle ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ObjCRuntime.NativeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("name")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setName:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The logger custom name (default value is set to the main bundle identifier).</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkInfoEnabled">
      <MemberSignature Language="C#" Value="public virtual bool NetworkInfoEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NetworkInfoEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("networkInfoEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setNetworkInfoEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        Enriches logs with network connection info. 
        This means: reachability status, connection type, mobile carrier name and many more will be added to each log. 
        For full list of network info attributes see <c>NetworkConnectionInfo</c> and <c>CarrierInfo</c>. 
        <c>false</c> by default.
        </summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintLogsToConsole">
      <MemberSignature Language="C#" Value="public virtual bool PrintLogsToConsole { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintLogsToConsole" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("printLogsToConsole")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setPrintLogsToConsole:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        Enables logs to be printed to the debugger console. 
        <c>false</c> by default.
        </summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteLogThreshold">
      <MemberSignature Language="C#" Value="public virtual Datadog.iOS.ObjC.DDLogLevel RemoteLogThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Datadog.iOS.ObjC.DDLogLevel RemoteLogThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("remoteLogThreshold", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setRemoteLogThreshold:", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Datadog.iOS.ObjC.DDLogLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        Set the minimum log level reported to Datadog servers. 
        Any log with a level equal or above the threshold will be sent. 
        Note: this setting doesn't impact logs printed to the console if <see cref="PrintLogsToConsole" /> 
        is used - all logs will be printed, no matter their level. 
        <c>DDLogLevel.Debug</c> by default.
        </summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteSampleRate">
      <MemberSignature Language="C#" Value="public virtual float RemoteSampleRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RemoteSampleRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("remoteSampleRate")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setRemoteSampleRate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        Sets the sampling rate for logging. 
        The sampling rate must be a value between <c>0</c> and <c>100</c>. 
        A value of <c>0</c> means no logs will be processed, <c>100</c> means all logs will be processed. 
        By default sampling is disabled, meaning that all logs are being processed.
        </summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Service">
      <MemberSignature Language="C#" Value="public virtual string Service { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Service" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("service")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Foundation.Export("setService:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The service name (default value is set to the application bundle identifier).</summary>
        <value>
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
